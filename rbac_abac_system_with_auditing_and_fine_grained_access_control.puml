@startuml RBAC ABAC System with Auditing and Fine-Grained Access Control

!define PRIMARY_COLOR #E67E22
!define SECONDARY_COLOR #3498DB
!define TERTIARY_COLOR #F1C40F
!define QUATERNARY_COLOR #8E44AD
!define QUINARY_COLOR #16A085

skinparam backgroundColor #CCE8CF
skinparam handwritten false
skinparam defaultFontName Arial
skinparam defaultFontSize 14
skinparam roundcorner 20
skinparam shadowing false

title RBAC/ABAC System with Auditing and Fine-Grained Access Control

rectangle "User Interface" as UI PRIMARY_COLOR

rectangle "API Gateway" as APIGateway SECONDARY_COLOR {
    component "Authentication" as Auth
    component "Request Routing" as Routing
}

rectangle "Identity and Access Management" as IAM TERTIARY_COLOR {
    component "User Management" as UserMgmt
    component "Role Management" as RoleMgmt
    component "Attribute Management" as AttrMgmt
    component "Policy Engine" as PolicyEngine
}

rectangle "Resource Access Layer" as RAL QUATERNARY_COLOR {
    component "Access Enforcement" as AccessEnforce
    component "Resource Manager" as ResMgr
}

database "User Store" as UserDB PRIMARY_COLOR
database "Role Store" as RoleDB SECONDARY_COLOR
database "Attribute Store" as AttrDB TERTIARY_COLOR
database "Policy Store" as PolicyDB QUATERNARY_COLOR

rectangle "Audit System" as AuditSystem QUINARY_COLOR {
    component "Audit Logger" as AuditLogger
    component "Audit Analyzer" as AuditAnalyzer
}

database "Audit Logs" as AuditDB QUINARY_COLOR

UI -[PRIMARY_COLOR,thickness=2]down-> APIGateway : <back:#FFFFFF><color:PRIMARY_COLOR>1. User Request</color></back>
APIGateway -[SECONDARY_COLOR,thickness=2]down-> IAM : <back:#FFFFFF><color:SECONDARY_COLOR>2. Authenticate & Authorize</color></back>
IAM -[TERTIARY_COLOR,thickness=2]right-> UserDB : <back:#FFFFFF><color:TERTIARY_COLOR>3. Verify User</color></back>
IAM -[QUATERNARY_COLOR,thickness=2]right-> RoleDB : <back:#FFFFFF><color:QUATERNARY_COLOR>4. Get Roles</color></back>
IAM -[QUINARY_COLOR,thickness=2]right-> AttrDB : <back:#FFFFFF><color:QUINARY_COLOR>5. Get Attributes</color></back>
IAM -[PRIMARY_COLOR,thickness=2]down-> PolicyDB : <back:#FFFFFF><color:PRIMARY_COLOR>6. Evaluate Policies</color></back>
IAM -[SECONDARY_COLOR,thickness=2]down-> RAL : <back:#FFFFFF><color:SECONDARY_COLOR>7. Access Decision</color></back>
RAL -[TERTIARY_COLOR,thickness=2]down-> ResMgr : <back:#FFFFFF><color:TERTIARY_COLOR>8. Access Resource</color></back>
APIGateway -[QUATERNARY_COLOR,thickness=2]left-> AuditSystem : <back:#FFFFFF><color:QUATERNARY_COLOR>9. Log Activity</color></back>
AuditSystem -[QUINARY_COLOR,thickness=2]down-> AuditDB : <back:#FFFFFF><color:QUINARY_COLOR>10. Store Audit Log</color></back>

note top of IAM
  Combines RBAC and ABAC:
  - Role-based for coarse-grained control
  - Attribute-based for fine-grained control
end note

note bottom of PolicyEngine
  Evaluates complex policies based on:
  - User roles
  - User attributes
  - Resource attributes
  - Environmental factors (time, location, etc.)
end note

note bottom of AuditSystem
  - Logs all access attempts (successful and failed)
  - Provides real-time alerts for suspicious activities
  - Supports compliance reporting and forensic analysis
end note

@enduml
