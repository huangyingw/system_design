@startuml
!define TABLE(name,desc) class name as "desc" << (T,#FFAAAA) >>
!define NOSQL(name,desc) class name as "desc" << (N,#AAFFAA) >>
!define PK(x) <b><color:red>PK: </color></b>x
!define FK(x) <color:green>FK: </color>x
!define SK(x) <b><color:blue>Shard Key: </color></b>x
hide methods
hide stereotypes

skinparam class {
    BackgroundColor #ECECEC
    ArrowColor #2688d4
    BorderColor #2688d4
}

title Integrated Database Design for Flash Sale System

package "Relational Database" {
    TABLE(users, "Users") {
        PK(user_id): BIGINT
        username: VARCHAR(50)
        email: VARCHAR(100)
        password_hash: VARCHAR(255)
        created_at: TIMESTAMP
        updated_at: TIMESTAMP
    }

    TABLE(flash_sale_events, "Flash Sale Events") {
        PK(event_id): BIGINT
        FK(product_id): STRING
        start_time: TIMESTAMP
        end_time: TIMESTAMP
        sale_price: DECIMAL(10,2)
        quantity_limit: INT
        created_at: TIMESTAMP
        updated_at: TIMESTAMP
    }
}

package "NoSQL Database" {
    NOSQL(products, "Products") {
        + _id: STRING (product_id)
        SK(product_id)
        name: STRING
        description: STRING
        price: DECIMAL
        stock_quantity: INT
        created_at: TIMESTAMP
        updated_at: TIMESTAMP
    }

    NOSQL(orders, "Orders") {
        + _id: STRING (order_id)
        SK(user_id + created_at)
        product_id: STRING
        quantity: INT
        total_price: DECIMAL
        status: STRING
        created_at: TIMESTAMP
        updated_at: TIMESTAMP
    }

    NOSQL(user_activity, "User Activity") {
        + _id: AUTO-GENERATED
        SK(user_id + timestamp)
        activity_type: STRING
        details: OBJECT
        timestamp: TIMESTAMP
    }

    NOSQL(system_logs, "System Logs") {
        + _id: AUTO-GENERATED
        SK(component + timestamp)
        log_level: STRING
        message: STRING
        timestamp: TIMESTAMP
    }
}

package "Cache" {
    NOSQL(product_cache, "Product Cache") {
        + key: product:{product_id}
        product_id: STRING
        name: STRING
        price: DECIMAL
        stock_quantity: INT
        description: STRING
    }

    NOSQL(flash_sale_cache, "Flash Sale Cache") {
        + key: flash_sale:{event_id}
        event_id: STRING
        product_id: STRING
        start_time: TIMESTAMP
        end_time: TIMESTAMP
        sale_price: DECIMAL
        quantity_limit: INT
        remaining_quantity: INT
    }

    NOSQL(user_session_cache, "User Session Cache") {
        + key: session:{session_id}
        user_id: STRING
        username: STRING
        email: STRING
        last_activity: TIMESTAMP
    }
}

' Relationships
users "1" -- "0..*" orders : places
users "1" -- "0..*" user_activity : generates
products "1" -- "0..*" orders : includes
products "1" -- "0..*" flash_sale_events : featured in
flash_sale_events "1" -- "0..*" orders : generates

' Cache relationships
products .. product_cache : caches
flash_sale_events .. flash_sale_cache : caches
users .. user_session_cache : caches

@enduml
