@startuml
!pragma layout dot
skinparam backgroundColor #EEEEEE
allowmixing

rectangle "Kafka Cluster" as KafkaCluster #LightBlue {
    rectangle "Broker1" as Broker1 #PaleGreen
    rectangle "Broker2" as Broker2 #PaleGreen
    rectangle "Broker3" as Broker3 #PaleGreen
    
    rectangle "Zookeeper Ensemble" as ZookeeperEnsemble #LightYellow {
        component "Zookeeper1" as Zookeeper1
        component "Zookeeper2" as Zookeeper2
        component "Zookeeper3" as Zookeeper3
    }

    rectangle "Topic1" as Topic1 #LightPink {
        component "Partition1_1" as Partition1_1
        component "Partition1_2" as Partition1_2
    }

    rectangle "Topic2" as Topic2 #LightPink {
        component "Partition2_1" as Partition2_1
        component "Partition2_2" as Partition2_2
    }
}

rectangle "Producers" as Producers #LightSkyBlue {
    component "Producer1" as Producer1
    component "Producer2" as Producer2
}

rectangle "Consumers" as Consumers #LightSalmon {
    component "Consumer1" as Consumer1
    component "Consumer2" as Consumer2
}

' Connections
Producer1 -[#Blue,thickness=2]-> Topic1 : <color:#Blue>1. Produce messages
Producer2 -[#Purple,thickness=2]-> Topic2 : <color:#Purple>2. Produce messages

Topic1 -[#Green,thickness=2]-> Partition1_1 : <color:#Green>3. Distribute
Topic1 -[#Green,thickness=2]-> Partition1_2 : <color:#Green>4. Distribute
Topic2 -[#Orange,thickness=2]-> Partition2_1 : <color:#Orange>5. Distribute
Topic2 -[#Orange,thickness=2]-> Partition2_2 : <color:#Orange>6. Distribute

Partition1_1 -[#Red,thickness=2]-> Broker1 : <color:#Red>7. Leader
Partition1_1 .[#Gray,thickness=1]-> Broker2 : <color:#Gray>8. Follower
Partition1_1 .[#Gray,thickness=1]-> Broker3 : <color:#Gray>9. Follower

Consumer1 -[#Brown,thickness=2]-> Partition1_1 : <color:#Brown>10. Consume
Consumer1 -[#Brown,thickness=2]-> Partition1_2 : <color:#Brown>11. Consume
Consumer2 -[#Magenta,thickness=2]-> Partition2_1 : <color:#Magenta>12. Consume
Consumer2 -[#Magenta,thickness=2]-> Partition2_2 : <color:#Magenta>13. Consume

Broker1 -[#Black,thickness=1]-> ZookeeperEnsemble : <color:#Black>14. Coordinate
Broker2 -[#Black,thickness=1]-> ZookeeperEnsemble : <color:#Black>15. Coordinate
Broker3 -[#Black,thickness=1]-> ZookeeperEnsemble : <color:#Black>16. Coordinate

note right of ZookeeperEnsemble
  Stores metadata:
  - Broker list
  - Topic configurations
  - Partition leaders
end note

note bottom of Consumers
  Consumer offsets stored in 
  Kafka (modern) or Zookeeper (legacy)
end note

note "Performance bottleneck:\nZookeeper writes for metadata updates" as N1
ZookeeperEnsemble .. N1

note "Optimization:\nIncrease partitions for better parallelism" as N2
Topic1 .. N2

@enduml
