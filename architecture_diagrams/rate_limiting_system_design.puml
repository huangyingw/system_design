@startuml
skinparam backgroundColor #ECECEC
skinparam linetype ortho
skinparam rectangle {
  roundCorner 25
}

rectangle "Client\nApplications" as CLIENT #LightBlue
rectangle "API Gateway /\nLoad Balancer" as LB #LightGreen
rectangle "Rate Limiter\nService" as RLS #Orange
rectangle "Rules Engine" as RE #Yellow
rectangle "Redis Cache" as RC #Pink
rectangle "PostgreSQL" as PG #LightCyan
rectangle "Admin Panel" as ADMIN #LightGray

CLIENT -down-> LB : API Requests
LB -down-> RLS : Route Requests
RLS -right-> RE : 1. Check Rules
RE -down-> RC : 2. Get/Set Counters
RE <-up-> PG : 3. Sync Rules\n(Periodic)
ADMIN -down-> PG : Manage Rules

note right of CLIENT
  Various client applications
  making API requests
end note

note right of LB
  - Distributes requests
  - Basic rate limiting (optional)
  - SSL termination
end note

note right of RLS
  - Enforces rate limits
  - Scales horizontally
  - Stateless design
end note

note right of RE
  - Caches active rules
  - Fast rule evaluation
  - Periodic sync with PostgreSQL
end note

note right of RC
  Key structure examples:
  - user:{userID}:endpoint:{endpoint}:counter
  - ip:{ipAddress}:global:counter
  TTL-based expiration for counters
end note

note right of PG
  Tables:
  - rate_limit_rules
  - user_data
  - audit_logs
  Indexes on frequently queried fields
end note

note left of ADMIN
  Web interface for:
  - Rule management
  - Analytics dashboard
  - System configuration
end note

@enduml
