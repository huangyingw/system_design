用中文回答
在生成的PUML文件中仅使用英文，包括组件名称、注释和评论
使用PlantUML绘制系统架构图
组件定义和注释说明：
    统一使用rectangle定义容器，component定义组件，不使用方括号[]定义任何元素
    避免note over对单个组件注释
    去掉颜色变量引用中的#符号
    容器内仅包含组件，连接在容器外处理
    使用完整组件定义、标准命名及箭头符号
    图表美观、紧凑，信息密度高，减少空白
    使用allowmixing指令，不使用PlantUML主题
    遵循'[rectangle|component] "描述" as 标识符 #颜色代码'格式，确保颜色代码前有'#'符号但不带引号，适用于所有类型的组件定义
    确保所有组件先定义后使用，名称保持一致
    使用note添加注释
    缓存组件标注key: value配对
    用`rectangle`代替`!define RECTANGLE class`避免渲染错误
    使用浅色调定义组件背景，确保与文字有足够对比度
    合理安排注释位置，避免虚线重叠或挤在一起，保持图表清晰
流程和性能：
    每条连线标注顺序编号，显示流程顺序
    通过note标注性能瓶颈和优化建议（英文）
设计和布局：
    避免白色背景，减轻视觉疲劳
    考虑优化及可扩展性，适用于长时间面试讨论
    确保布局清晰，组件分组合理
    连线简洁，尽量避免交叉
    注释位置统一
    适度使用颜色区分不同类型的组件或流程
    提高整体可读性，适合长时间查看和讨论
    使用!pragma layout dot指令优化布局
错误处理：
    自动检测并修复类似错误
    如果告知错误已解决，总结原因并生成精简中文AI指令防止复发
连线设计：
    -[#color,thickness=2]direction->格式，不同连线用不同颜色
    文字用<back:#FFFFFF><color:#color>内容</color></back>格式，color为对应连线颜色
    避免连线重叠，保持图表清晰可读
数据库选型：列举关系型和NoSQL数据库，说明特点、应用场景及混合使用策略
