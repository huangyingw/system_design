@startuml
skinparam backgroundColor #D3D3D3

' System Description
' Brute-Force Password Cracker: Aiming to recover a lost password for a colleague's Threads account using brute-force attack.
' The process could take several months to years, utilizing both paid computing resources (from private cloud providers like AWS, Azure, GCP)
' and free resources in the form of a temporary public computer network.
' The integration of these two types of resources (Private Cloud Resources and Free Compute Resources) is not clear.

package "Private Cloud Compute Nodes" {
    [Central Coordination Node] as Coordinator
    frame "Apache Spark Cluster" {
        note right of "Apache Spark Cluster"
          Advantages of Apache Spark:
          - Efficient large-scale data processing
          - Superior in-memory computing performance
          - Easy to parallelize processing
          - Resilient Distributed Datasets (RDD) for fault tolerance
          - Good adaptability to dynamic workloads
          - Flexible integration capabilities
        end note
        [Distributed Producer Node 1 (Range A)] as DistProducer1
        [Distributed Producer Node 2 (Range B)] as DistProducer2
        [Kubernetes Autoscaler] as Autoscaler
        [Consumer Node 3 (Dynamic)] as DynamicConsumer3
    }
    [Central Pub/Sub Messaging System] as PubSub
    note right of Autoscaler
      Kubernetes Autoscaler:
      - Monitors the length of the message queue
      - Dynamically scales producer and consumer nodes
        based on the queue length
    end note
    note right of Coordinator
      Central Coordination Node:
      - Manages overall system operation
      - Configures and oversees the Pub/Sub system
      - Handles general system monitoring and fault management
    end note
}

package "Free Compute Resources Nodes" {
    [Consumer Node 1] as FreeConsumer1
    [Consumer Node 2] as FreeConsumer2
}
    
[RESTful Thread API] as API

Autoscaler --> PubSub : Monitor Queue Length
Autoscaler --> DistProducer1 : Scale In/Out
Autoscaler --> DistProducer2 : Scale In/Out
Autoscaler --> DynamicConsumer3 : Scale In/Out

Coordinator --> DistProducer1 : Assign Range & Manage
Coordinator --> DistProducer2 : Assign Range & Manage
Coordinator --> PubSub : System Management & Configuration
    
DistProducer1 --> PubSub : Publish Passwords
DistProducer2 --> PubSub : Publish Passwords

PubSub --> FreeConsumer1 : Subscribe & Get Passwords
PubSub --> FreeConsumer2 : Subscribe & Get Passwords
PubSub --> DynamicConsumer3 : Subscribe & Get Passwords

FreeConsumer1 --> API : Validate Password
FreeConsumer2 --> API : Validate Password
DynamicConsumer3 --> API : Validate Password

API --> FreeConsumer1 : Return Status Code
API --> FreeConsumer2 : Return Status Code
API --> DynamicConsumer3 : Return Status Code

Coordinator -up-> [Stop Signal] : If Correct Password Found

@enduml
