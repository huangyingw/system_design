@startuml Real-time Collaborative Editing Flow

skinparam backgroundColor #FEFEFE
skinparam handwritten false
skinparam monochrome false
skinparam shadowing false
skinparam defaultFontName Arial
skinparam defaultFontSize 14
skinparam sequenceArrowThickness 2
skinparam roundcorner 10
skinparam maxMessageSize 200

skinparam sequence {
    ArrowColor #2C3E50
    ActorBorderColor #2980B9
    LifeLineBorderColor #2980B9
    LifeLineBackgroundColor #A9CCE3
    
    ParticipantBorderColor #2980B9
    ParticipantBackgroundColor #E8F8F5
    ParticipantFontName Arial
    ParticipantFontSize 16
    ParticipantFontColor #2C3E50
    
    ActorBackgroundColor #85C1E9
    ActorFontColor #2C3E50
    ActorFontSize 16
    ActorFontName Arial
}

skinparam database {
    BorderColor #27AE60
    BackgroundColor #D5F5E3
    FontColor #2C3E50
}

skinparam queue {
    BorderColor #8E44AD
    BackgroundColor #E8DAEF
    FontColor #2C3E50
}

actor "User A" as UserA #85C1E9
actor "User B" as UserB #85C1E9
participant "Frontend A" as FrontendA
participant "Frontend B" as FrontendB
participant "API Gateway" as Gateway
participant "Collaboration\nService" as CollabService
participant "Document\nService" as DocService
database "Document DB" as DocDB
queue "Message Queue" as MQ
participant "Notification\nService" as NotifyService

== Document Opening ==
UserA -> FrontendA: Open document
activate FrontendA
FrontendA -> Gateway: Request document
activate Gateway
Gateway -> DocService: Fetch document
activate DocService
DocService -> DocDB: Retrieve document
activate DocDB
DocDB --> DocService: Document data
deactivate DocDB
DocService --> Gateway: Document data
deactivate DocService
Gateway --> FrontendA: Document data
deactivate Gateway
FrontendA --> UserA: Display document
deactivate FrontendA

UserB -> FrontendB: Open same document
activate FrontendB
FrontendB -> Gateway: Request document
activate Gateway
Gateway -> DocService: Fetch document
activate DocService
DocService -> DocDB: Retrieve document
activate DocDB
DocDB --> DocService: Document data
deactivate DocDB
DocService --> Gateway: Document data
deactivate DocService
Gateway --> FrontendB: Document data
deactivate Gateway
FrontendB --> UserB: Display document
deactivate FrontendB

== Real-time Editing ==
UserA -> FrontendA: Make changes
activate FrontendA
FrontendA -> Gateway: Send changes
activate Gateway
Gateway -> CollabService: Process changes
activate CollabService
CollabService -> DocService: Update document
activate DocService
DocService -> DocDB: Save changes
activate DocDB
deactivate DocDB
CollabService -> MQ: Broadcast changes
activate MQ
deactivate CollabService

MQ -> NotifyService: Notify of changes
activate NotifyService
NotifyService -> Gateway: Push update
Gateway --> FrontendB: Receive update
deactivate Gateway
FrontendB --> UserB: Display updated content
deactivate NotifyService
deactivate MQ

== Conflict Resolution ==
UserB -> FrontendB: Make conflicting changes
activate FrontendB
FrontendB -> Gateway: Send changes
activate Gateway
Gateway -> CollabService: Process changes
activate CollabService
CollabService -> CollabService: Detect conflict
CollabService -> CollabService: Resolve conflict
CollabService -> DocService: Update document
activate DocService
DocService -> DocDB: Save merged changes
activate DocDB
deactivate DocDB
CollabService -> MQ: Broadcast resolved changes
activate MQ
deactivate CollabService

MQ -> NotifyService: Notify of resolved changes
activate NotifyService
NotifyService -> Gateway: Push update
Gateway --> FrontendA: Receive update
Gateway --> FrontendB: Receive update
deactivate Gateway
FrontendA --> UserA: Display merged content
FrontendB --> UserB: Display merged content
deactivate NotifyService
deactivate MQ

== Offline Editing ==
UserA -> FrontendA: Go offline
UserA -> FrontendA: Make offline changes
UserA -> FrontendA: Come back online
activate FrontendA
FrontendA -> Gateway: Sync offline changes
activate Gateway
Gateway -> CollabService: Process offline changes
activate CollabService
CollabService -> CollabService: Merge with latest version
CollabService -> DocService: Update document
activate DocService
DocService -> DocDB: Save merged changes
activate DocDB
deactivate DocDB
CollabService -> MQ: Broadcast merged changes
activate MQ
deactivate CollabService

MQ -> NotifyService: Notify of merged changes
activate NotifyService
NotifyService -> Gateway: Push update
Gateway --> FrontendA: Confirm sync
Gateway --> FrontendB: Receive update
deactivate Gateway
FrontendA --> UserA: Display synced content
deactivate FrontendA
FrontendB --> UserB: Display updated content
deactivate NotifyService
deactivate MQ

@enduml
