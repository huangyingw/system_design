@startuml Distributed Cache System with Consistency Strategies

!pragma layout dot

allowmixing

' 定义颜色变量
!define PRIMARY_COLOR #E67E22
!define SECONDARY_COLOR #3498DB
!define TERTIARY_COLOR #F1C40F
!define QUATERNARY_COLOR #8E44AD
!define QUINARY_COLOR #16A085
!define BG_COLOR #CCE8CF

skinparam backgroundColor BG_COLOR

' 定义组件
rectangle "Client" as Client PRIMARY_COLOR {
    component "Client App" as ClientApp
}

rectangle "Load Balancer" as LB SECONDARY_COLOR {
    component "Request Router" as RequestRouter
}

rectangle "Cache Cluster" as CC TERTIARY_COLOR {
    component "Cache Nodes" as CacheNodes
    component "Eviction Policy" as EvictionPolicy
}

rectangle "Consistency Manager" as CM QUATERNARY_COLOR {
    component "Consistency Checker" as ConsistencyChecker
}

rectangle "Persistence Store" as PS QUINARY_COLOR {
    component "Database" as Database
}

rectangle "Cache Warmer" as CW PRIMARY_COLOR {
    component "Data Preloader" as DataPreloader
}

rectangle "Bloom Filter" as BF SECONDARY_COLOR {
    component "Key Filter" as KeyFilter
}

rectangle "Monitoring & Alerts" as MA TERTIARY_COLOR {
    component "Performance Monitor" as PerformanceMonitor
}

' 连接和流程
Client -[PRIMARY_COLOR,thickness=2]-> LB : <back:#FFFFFF><color:PRIMARY_COLOR>1. Request</color></back>
LB -[SECONDARY_COLOR,thickness=2]-> CC : <back:#FFFFFF><color:SECONDARY_COLOR>2. Route request</color></back>
CC -[TERTIARY_COLOR,thickness=2]-> BF : <back:#FFFFFF><color:TERTIARY_COLOR>3. Filter non-existent keys</color></back>
BF -[QUATERNARY_COLOR,thickness=2]-> CM : <back:#FFFFFF><color:QUATERNARY_COLOR>4. Ensure consistency</color></back>
CM -[QUINARY_COLOR,thickness=2]-> PS : <back:#FFFFFF><color:QUINARY_COLOR>5. Sync if needed</color></back>
CC -[PRIMARY_COLOR,thickness=2]-> PS : <back:#FFFFFF><color:PRIMARY_COLOR>6. Read/Write through</color></back>

PS -[SECONDARY_COLOR,thickness=2,dashed]-> CC : <back:#FFFFFF><color:SECONDARY_COLOR>7. Return data (if not in cache)</color></back>
CC -[TERTIARY_COLOR,thickness=2,dashed]-> LB : <back:#FFFFFF><color:TERTIARY_COLOR>8. Return cached/fetched data</color></back>
LB -[QUATERNARY_COLOR,thickness=2,dashed]-> Client : <back:#FFFFFF><color:QUATERNARY_COLOR>9. Return response to client</color></back>

CW -[QUINARY_COLOR,thickness=2]-> CC : <back:#FFFFFF><color:QUINARY_COLOR>10. Preload hot data</color></back>
MA -[PRIMARY_COLOR,thickness=2]-> CC : <back:#FFFFFF><color:PRIMARY_COLOR>11. Monitor performance</color></back>

' 注释
note bottom of CM
  Consistency strategies:
  - Strong consistency
  - Eventual consistency
  - Read-your-writes consistency
  - Causal consistency
  - Session consistency
end note

note right of CC
  Cache eviction policies:
  - LRU (Least Recently Used)
  - LFU (Least Frequently Used)
  - FIFO (First In First Out)
  - Time-based expiration
end note

note bottom of CW
  Cache warming strategies:
  - Periodic data preloading
  - On-demand preloading
  - Gradual cache population
end note

note right of BF
  Cache penetration prevention:
  - Filters out requests for non-existent keys
  - Reduces unnecessary database queries
end note

note bottom of PS
  Write strategies:
  - Write-through
  - Write-behind (Write-back)
  - Write-around
end note

@enduml
