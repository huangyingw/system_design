@startuml Message Queue System Design

skinparam backgroundColor #FAFAFA
skinparam handwritten false
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundcorner 20
skinparam shadowing true

!define RECTANGLE class

title 高可用分布式消息队列系统设计

' 生产者
RECTANGLE "生产者集群" as Producers {
    [Producer 1]
    [Producer 2]
    [Producer N]
}

' 消费者
RECTANGLE "消费者集群" as Consumers {
    [Consumer 1]
    [Consumer 2]
    [Consumer N]
}

' 消息队列集群
RECTANGLE "消息队列集群" as QueueCluster {
    RECTANGLE "Broker 1" as Broker1 {
        queue "Topic 1" as Topic1_1
        queue "Topic 2" as Topic1_2
    }
    RECTANGLE "Broker 2" as Broker2 {
        queue "Topic 1" as Topic2_1
        queue "Topic 2" as Topic2_2
    }
    RECTANGLE "Broker N" as BrokerN {
        queue "Topic 1" as TopicN_1
        queue "Topic 2" as TopicN_2
    }
}

' 元数据存储
database "ZooKeeper集群" as ZK {
    [ZK Node 1]
    [ZK Node 2]
    [ZK Node 3]
}

' 消息持久化
database "消息存储" as Storage {
    [Disk 1]
    [Disk 2]
    [Disk N]
}

' 监控和管理
RECTANGLE "监控和管理" as Monitor {
    [性能监控]
    [告警系统]
    [管理控制台]
}

' 连接关系
Producers -down-> QueueCluster : 发布消息
QueueCluster -down-> Consumers : 消费消息
QueueCluster <-right-> ZK : 元数据管理
QueueCluster -down-> Storage : 消息持久化
Monitor -up-> QueueCluster : 监控和管理

note right of QueueCluster
  关键特性:
  1. 高可用性: 多Broker集群
  2. 数据持久化: 消息存储到磁盘
  3. 负载均衡: 生产者和消费者负载均衡
  4. 容错: Broker故障自动切换
  5. 水平扩展: 动态增加Broker
end note

note left of ZK
  ZooKeeper职责:
  1. Broker注册与发现
  2. Topic配置管理
  3. 消费者负载均衡
  4. 元数据存储
end note

note bottom of Consumers
  消费模式:
  1. 点对点 (Queue)
  2. 发布/订阅 (Topic)
  3. 消费组 (Consumer Group)
end note

@enduml
