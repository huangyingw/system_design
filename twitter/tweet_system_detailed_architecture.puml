@startuml

skinparam backgroundColor #D3D3D3

title Twitter System Architecture - Tweet Posting, Commenting, and Timeline Update Process

rectangle Client

rectangle "Core Services" as Core {
    rectangle "Load Balancer & Web Server" as LBWS
    rectangle "Application & Monitoring Services" as AMS
}

rectangle "Tweet Processing Service" as TPS {
    rectangle "Tweet & Comment Handlers" as TCH
    rectangle "Async Processing Queue" as APQ
    rectangle "Workers for Processing" as Workers
}

rectangle "Supporting Services" as SS {
    rectangle "Search & Notification Services" as SNS
    rectangle "Timeline Update Service" as TUS
}

rectangle "DataPersistenceService" as DPS {
    rectangle "Redis Cluster" as Redis {
        rectangle TweetCache
            rectangle TimelineCache
            rectangle HotTweetsAndTopicsCache
        rectangle CommentCache
    }
    rectangle "Sharded Database" as Database {
        rectangle TweetData
        rectangle CommentData
    }
}

Client -down-> Core : Request to Post/Read
LBWS -down-> AMS : Routes Request
AMS -down-> TPS : Handles Tweet/Comment
TCH -down-> APQ : Queues Tasks
APQ -down-> Workers : Processes Tasks
Workers -down-> DPS : Updates Data
Redis -> Database : Persists Cached Data
Workers -down-> SS : Updates Search/Notifies
TUS -down-> DPS : Updates Timelines
Client -down-> Core : Requests Timeline
AMS -down-> TUS : Fetches Timeline Data
TUS -down-> DPS : Checks Cache
Redis -> TUS : Returns Cached Data
TUS -> AMS : Returns Timeline Data
AMS -> LBWS : Sends Back Data
LBWS -> Client : Returns Data/Updates Timeline

@enduml
