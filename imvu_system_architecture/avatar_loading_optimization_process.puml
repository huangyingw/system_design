@startuml
skinparam backgroundColor #D3D3D3

actor User
participant "Chat Room Service" as ChatRoomService
database "Product Database" as ProductDB
participant "Metadata Analysis" as MetadataAnalysis
participant "Sorting System" as SortingSystem
database "Cache" as Cache
participant "Avatar Loading Module" as AvatarLoading

User -> ChatRoomService: Request product IDs
ChatRoomService -> ProductDB: Fetch product IDs
    alt Product IDs not found
        ProductDB -> ChatRoomService: Return error (Product IDs not found)
        ChatRoomService -> User: Return error (Product IDs not found)
    else Product IDs found
ProductDB -> ChatRoomService: Return product IDs
ChatRoomService -> MetadataAnalysis: Analyze product IDs metadata
loop Each Product ID
    MetadataAnalysis -> MetadataAnalysis: Determine overlaps and visibility
end
MetadataAnalysis -> SortingSystem: Provide product IDs with visibility and overlap info
SortingSystem -> SortingSystem: Canonical sort of product IDs
SortingSystem -> Cache: Check cached avatars for sorted product IDs
alt Cache hit
    Cache -> ChatRoomService: Provide cached avatars
    ChatRoomService -> User: Display cached avatars
else Cache miss
    SortingSystem -> AvatarLoading: Request avatar generation for sorted product IDs
            alt Avatar generation failed
                AvatarLoading -> SortingSystem: Return error (Avatar generation failed)
                SortingSystem -> ChatRoomService: Return error (Avatar generation failed)
                ChatRoomService -> User: Return error (Avatar generation failed)
            else Avatar generation successful
    AvatarLoading -> Cache: Update cache with new avatars
    Cache -> ChatRoomService: Provide newly generated avatars
    ChatRoomService -> User: Display newly generated avatars
end
        end
    end
@enduml
