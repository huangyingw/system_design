@startuml

package "MongoDB Cluster" {

  package "Config Servers" {
    [Config Server 1]
    [Config Server 2]
    [Config Server 3]
  }
  
  package "Query Routers" {
    [mongos 1]
    [mongos 2]
  }
  
  package "Shards" {
    package "Shard 1" {
      [Primary Node 1]
      [Secondary Node 1]
      [Secondary Node 2]
    }
    package "Shard 2" {
      [Primary Node 2]
      [Secondary Node 3]
      [Secondary Node 4]
    }
    package "Shard 3" {
      [Primary Node 3]
      [Secondary Node 5]
      [Secondary Node 6]
    }
  }
}

actor User

rectangle "Web Server" {
  [API Gateway]
  [Business Logic]
  [Cache: Redis]
}

User --> "API Gateway": Request
"API Gateway" --> "Business Logic": Forward Request
"Business Logic" --> "Cache: Redis": Check Cache
note right of "Cache: Redis"
  if Cache Miss:
    return Cache Miss
end note
"Cache: Redis" --> "Business Logic": Cache Miss
"Business Logic" --> "Query Routers (mongos)": Cache Miss (Read Request)
"Business Logic" --> "Query Routers (mongos)": Write Request
"Query Routers (mongos)" --> "Secondary Node 1": Read Request
"Query Routers (mongos)" --> "Secondary Node 2": Read Request
"Query Routers (mongos)" --> "Secondary Node 3": Read Request
"Query Routers (mongos)" --> "Primary Node 1": Write Request
"Query Routers (mongos)" --> "Primary Node 2": Write Request
"Query Routers (mongos)" --> "Primary Node 3": Write Request
"Primary Node 1" --> "Secondary Node 1": Replicate Data
"Primary Node 2" --> "Secondary Node 3": Replicate Data
"Primary Node 3" --> "Secondary Node 5": Replicate Data
"Business Logic" --> "Cache: Redis": Update Cache
note right of "Cache: Redis"
  if Cache Hit:
    return Cached Data
end note
"Cache: Redis" --> "Business Logic": Cache Hit

@enduml
