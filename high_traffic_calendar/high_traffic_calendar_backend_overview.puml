@startuml
!define RECTANGLE_COLOR #FEFECE
!define ARROW_COLOR #A80036
!define ACTOR_COLOR #A9DCDF

skinparam actor {
  BackgroundColor ACTOR_COLOR
  BorderColor #666666
}

skinparam rectangle {
  BackgroundColor RECTANGLE_COLOR
  BorderColor #666666
  ArrowColor ARROW_COLOR
}

skinparam package {
  BackgroundColor RECTANGLE_COLOR
  BorderColor #666666
}

skinparam arrow {
  Color ARROW_COLOR
}

left to right direction

actor User

rectangle "Load Balancer" {
  [Nginx/HAProxy]
}

rectangle "API Gateway" {
  [Create Event]
  [Update Event]
  [Delete Event]
  [Get Events]
}

rectangle "Web Server" {
  [Business Logic]
}

rectangle "Message Queue" {
  [Kafka Topic]
}

rectangle "Workers" {
  [Send Notification]
  [Process Recurring Events]
  [Data Analysis & Report Generation]
  [Cache Update]
  [Search Index Update]
}

package "Databases" {
  database "Primary DB" {
    [PostgreSQL/MySQL]
  }
  database "Cache" {
    [Redis]
  }
  database "Search Engine" {
    [Elasticsearch]
}
}

User --> "Load Balancer": Request
"Load Balancer" --> "API Gateway": Forward
"API Gateway" --> "Web Server": Process

' Write Requests
"Web Server" --> "Message Queue": Produce
"Workers" <-- "Message Queue": Consume
"Workers" --> "Primary DB": Write
"Primary DB" --> "Workers": Acknowledge

' Read Requests
"Web Server" --> "Cache": Check
"Cache" --> "Web Server": Hit/Miss
"Web Server" --> "Primary DB": Query if Miss
"Primary DB" --> "Web Server": Return Data
"Web Server" --> "Cache": Update if Miss
"Web Server" --> "Search Engine": Search
"Workers" --> "Primary DB": Query
"Workers" --> "Cache": Invalidate

note right of [Send Notification]
  When an event is about to start,
  send a notification to the user.
end note

note right of [Process Recurring Events]
  Handle periodic events, e.g.,
  weekly or monthly recurring events.
end note

note right of [Data Analysis & Report Generation]
  Analyze large datasets and
  generate reports or statistics.
end note

note right of [Cache Update]
  Update cache when the
  database data changes.
end note

note right of [Search Index Update]
  Update Elasticsearch index
  when event data changes.
end note

@enduml
