@startuml Distributed System Monitoring Architecture

skinparam backgroundColor #CCE8CF
skinparam handwritten false
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundcorner 20
skinparam shadowing true
allowmixing
!pragma layout dot

title Distributed System Monitoring Architecture

!define PRIMARY_COLOR #E67E22
!define SECONDARY_COLOR #3498DB
!define TERTIARY_COLOR #F1C40F
!define QUATERNARY_COLOR #8E44AD
!define QUINARY_COLOR #16A085

' 监控代理
rectangle "Monitoring Agent" as Agent PRIMARY_COLOR {
    component "Metric Collector" 
    component "Log Collector" 
    component "Health Checker" 
}

' 数据收集和传输
queue "Message Queue" as MQ SECONDARY_COLOR
component "Data Ingestion Service" as Ingestion TERTIARY_COLOR

' 数据存储
database "Time Series DB\n(Metrics)" as TSDB QUATERNARY_COLOR
database "Log Storage\n(Event Logs)" as LogDB QUINARY_COLOR

' 数据处理和分析
rectangle "Data Processing" as Processing PRIMARY_COLOR {
    component "Stream Processing" 
    component "Batch Processing" 
    component "Log Analyzer" 
    component "Metric Analyzer" 
}

' 告警系统
rectangle "Alert Manager" as AlertManager SECONDARY_COLOR {
    component "Rule Engine" 
    component "Notification Service" 
}

' 可视化
rectangle "Visualization" as Viz TERTIARY_COLOR {
    component "Dashboard" 
    component "Report Generator" 
}

' API网关
rectangle "API Gateway" as Gateway QUATERNARY_COLOR

' 用户界面
actor "Admin/User" as User

' 关系
Agent -[PRIMARY_COLOR,thickness=2]down-> MQ : <back:#FFFFFF><color:PRIMARY_COLOR>1. Send data</color></back>
MQ -[SECONDARY_COLOR,thickness=2]down-> Ingestion : <back:#FFFFFF><color:SECONDARY_COLOR>2. Consume data</color></back>
Ingestion -[TERTIARY_COLOR,thickness=2]down-> TSDB : <back:#FFFFFF><color:TERTIARY_COLOR>3. Store metrics</color></back>
Ingestion -[QUATERNARY_COLOR,thickness=2]down-> LogDB : <back:#FFFFFF><color:QUATERNARY_COLOR>4. Store logs</color></back>
TSDB -[QUINARY_COLOR,thickness=2]right-> Processing : <back:#FFFFFF><color:QUINARY_COLOR>5. Query metrics</color></back>
LogDB -[PRIMARY_COLOR,thickness=2]right-> Processing : <back:#FFFFFF><color:PRIMARY_COLOR>6. Query logs</color></back>
Processing -[SECONDARY_COLOR,thickness=2]up-> AlertManager : <back:#FFFFFF><color:SECONDARY_COLOR>7. Trigger alerts</color></back>
Processing -[TERTIARY_COLOR,thickness=2]down-> Viz : <back:#FFFFFF><color:TERTIARY_COLOR>8. Provide processed data</color></back>

' 数据存储之间的关系
LogDB ..[QUATERNARY_COLOR,thickness=2]> TSDB : <back:#FFFFFF><color:QUATERNARY_COLOR>9. Extract metrics</color></back>

note right of TSDB
  Stores time-based numerical data
  E.g., CPU usage, memory usage, request count
end note

note right of LogDB
  Stores detailed event logs
  E.g., error messages, access logs, system events
end note

note bottom of LogDB
  Some log data can be 
  transformed into metrics
  and stored in Time Series DB
end note

note right of Agent
  Deployed on each node/service
  Collects metrics, logs, and health status
end note

note right of AlertManager
  Configurable alert rules
  Multiple notification channels
  (Email, SMS, Slack, etc.)
end note

note right of Viz
  Real-time and historical data visualization
  Customizable dashboards
  Automated reporting
end note

@enduml
