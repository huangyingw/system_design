@startuml Telegram_Voice_Video_Call_Architecture_Optimized
!theme plain
skinparam backgroundColor #E6E6FA
skinparam handwritten false
skinparam defaultFontName Arial
skinparam defaultFontSize 14
skinparam roundcorner 10
skinparam arrowColor #333333
skinparam componentBackgroundColor #EEEEEE

rectangle "User Devices" {
    [Caller Device\nWebRTC Engine] as CallerDevice
    [Callee Device\nWebRTC Engine] as CalleeDevice
}

rectangle "Telegram Servers" {
    [Global Load Balancer] as GlobalLB
    [Regional Load Balancer] as RegionalLB
    rectangle "Signaling Server Cluster" {
        [Signaling Server] as SignalingServer
        [Cluster Manager] as SignalingManager
    }
    [Call Initiator] as CallInitiator
    [Session Manager] as SessionManager
}

cloud "Optimized Network Services" {
    rectangle "STUN/TURN Server Cluster" {
        [STUN/TURN Server] as STUNTURNServer
        [Cluster Manager] as STUNTURNManager
    }
    [Auto-scaler] as AutoScaler
}

database "Database Cluster" {
    [Database Node] as DBNode
    [Cluster Manager] as DBManager
}

rectangle "Caching Layer" {
    [Redis Node] as RedisNode
    [Cluster Manager] as RedisManager
}

CallerDevice -down-> GlobalLB : 1. Initiate call
GlobalLB -down-> RegionalLB : 2. Route to nearest region
RegionalLB -down-> SignalingServer : 3. Handle signaling
SignalingServer -down-> CalleeDevice : 4. Notify incoming call
CallerDevice <--> STUNTURNServer : 5. Get public IP / Relay
CalleeDevice <--> STUNTURNServer : 6. Get public IP / Relay
CallerDevice <---> CalleeDevice : 7. Establish P2P connection
SignalingServer --> DBNode : Log calls
SignalingServer <--> RedisNode : Cache user status
RedisNode <--> DBNode : Sync preferences

AutoScaler -up-> STUNTURNManager : Manage scaling

note right of DBNode
  Tables:
  Users (PK: user_id, Index: username, phone_number)
  CallLogs (PK: call_id, FK: caller_id, callee_id, Index: start_time, end_time)
  UserPreferences (PK: user_id)
end note

note right of RedisNode
  Keys:
  user:online:{user_id} (TTL: 5min)
  active_call:{call_id} (Hash)
  user:device:{user_id} (Hash)
  call:stats:{call_id} (Hash)
end note

@enduml
