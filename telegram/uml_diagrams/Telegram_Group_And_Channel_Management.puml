@startuml Telegram_Group_And_Channel_Management_Optimized

!define RECTANGLE component
!define DATABASE database
!define QUEUE queue
!define CLOUD cloud

skinparam backgroundColor #E0E0E0
skinparam handwritten false
skinparam monochrome true
skinparam packageStyle rectangle
skinparam defaultFontName Arial
skinparam defaultFontSize 12

RECTANGLE "Client Applications" {
    [Mobile App]
    [Desktop Client]
    [Web Client]
}

CLOUD "Load Balancer" {
    [API Gateway]
}

RECTANGLE "Group/Channel Service Cluster" {
    [Creation Handler]
    [Membership Manager]
    [Permission Controller]
    [Content Distributor]
}

DATABASE "Group/Channel Database" {
    [Cassandra Cluster]
    note right: Sharding Key: group_id/channel_id
}

DATABASE "User Database" {
    [MongoDB Cluster]
    note right: Sharding Key: user_id
}

QUEUE "Message Queue" {
    [Kafka Cluster]
}

RECTANGLE "Push Notification Service" {
    [Notification Dispatcher]
}

CLOUD "Content Delivery Network" {
    [Edge Servers]
}

DATABASE "Caching Layer" {
    [Redis Cluster]
    note right: Key: group_id:message_id
}

"Client Applications" <--> "Load Balancer" : HTTPS
"Load Balancer" <--> "Group/Channel Service Cluster" : Route Requests
"Group/Channel Service Cluster" <--> "Group/Channel Database" : CRUD Operations
"Group/Channel Service Cluster" <--> "User Database" : User Info
"Group/Channel Service Cluster" --> "Message Queue" : Publish Messages/Posts
"Message Queue" --> "Push Notification Service" : Trigger Notifications
"Push Notification Service" --> "Client Applications" : Send Notifications
"Message Queue" --> "Content Delivery Network" : Distribute Content
"Content Delivery Network" --> "Client Applications" : Deliver Content
"Group/Channel Service Cluster" <--> "Caching Layer" : Cache Data

@enduml
