@startuml
!theme plain
title Cohesity Data Delivery System

' Custom styles
skinparam {
    backgroundColor #FAFAFA
    handwritten false
    defaultFontName Arial
    defaultFontSize 14
    componentStyle rectangle
    packageStyle rectangle
    padding 5
    nodesep 60
    ranksep 80
    
    component {
        backgroundColor #FFFFFF
        borderColor #666666
        FontSize 14
    }
    
    database {
        backgroundColor #FFFFFF
        borderColor #666666
        FontSize 14
    }
    
    queue {
        backgroundColor #FFFFFF
        borderColor #666666
        FontSize 14
    }
    
    note {
        backgroundColor #FAFAFA
        borderColor #666666
        FontSize 13
    }

    arrow {
        FontSize 13
    }
}

' Custom colors
!define ORANGE #FFA500
!define BLUE #4285F4
!define GREEN #34A853
!define RED #EA4335
!define PURPLE #9334E6
!define GRAY #7F8C8D

' Client Zone
actor "External Client" as client
component "Client SDK" as sdk

' Gateway & Auth
component "API Gateway" as gateway
component "Auth Service" as auth

' Data Services
component "Data Tracking Service" as tracker
component "Data Delivery Service" as sender

' Storage
database "Token Store\n(Redis)" as tokenDB
database "Delivery Records\n(PostgreSQL)" as deliveryDB
database "Source Data\n(S3)" as sourceDB
database "Cache\n(Redis)" as cache

' Queue
queue "Kafka Queue" as queue

' Connections
client --> sdk : "Use"
sdk --> gateway : "1. Request with Token"
gateway --> auth : "2. Authenticate"
auth <--> tokenDB : "3. Validate Token"
auth --> tracker : "4. Token Valid"
tracker <--> deliveryDB : "5. Query History"
tracker <--> sourceDB : "6. Fetch New Data"
tracker --> queue : "7. Enqueue"
queue --> sender : "8. Process"
sender --> client : "9. Stream Data"
sender --> deliveryDB : "10. Update Status"
sender <--> cache : "11. Cache"

note right of tokenDB
  <b>Token Store</b>
  --
  • JWT tokens
  • Role permissions
  • Rate limits
  • Token rotation
end note

note right of deliveryDB
  <b>Delivery Records</b>
  --
  • UUID & client_id
  • Time range (start/end)
  • Checksum & status
  • Retry count
  • Metadata (JSONB)
end note

note right of sourceDB
  <b>Source Data</b>
  --
  • Time-series data
  • Time partitioned
  • Range indexed
  • Version control
end note

note right of queue
  <b>Kafka Topics</b>
  --
  • delivery.requests
  • delivery.retries
  • delivery.status
  • Exactly-once delivery
end note

note right of cache
  <b>Cache Layer</b>
  --
  • TTL: 24h
  • LRU policy
  • Circuit breaker
  • Rate limiting
end note

@enduml 
