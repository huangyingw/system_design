@startuml
!define RECTANGLE class
skinparam rectangle {
  BackgroundColor<<microservice>> LightBlue
  BorderColor<<microservice>> Blue
}

skinparam linetype ortho
skinparam nodesep 50
skinparam ranksep 50
skinparam dpi 150

RECTANGLE "User Interface (UI)" as UI <<microservice>> {
  note top of UI
    - Allows users to search flights
    - Displays available options
    - Handles booking process
  end note
}

RECTANGLE "Flight Search Service (FSS)" as FSS <<microservice>> {
  note left of FSS
    - Handles flight search requests
    - Queries Cache first
    - Retrieves data from the Database if not found in Cache
  end note
}

RECTANGLE "Booking Service (BS)" as BS <<microservice>> {
  note bottom of BS
    - Manages booking process
    - Verifies flight availability
    - Interacts with Payment Service
    - Stores booking details
  end note
}

RECTANGLE "Payment Service (PS)" as PS <<microservice>> {
  note right of PS
    - Processes payments securely
    - Stores payment transaction data
  end note
}

RECTANGLE "Notification Service (NS)" as NS <<microservice>> {
  note right of NS
    - Sends booking confirmations
    - Notifies users of booking status
  end note
}

RECTANGLE "Airline API Integrator (AAI)" as AAI <<microservice>> {
  note right of AAI
    - Integrates with multiple Airline APIs
    - Fetches real-time flight data
    - Updates the Database with latest info
  end note
}

RECTANGLE "Database (DB)" as DB {
  note right of DB
    - Stores flight, booking, and payment data
    - Provides data retrieval for services
  end note
}

RECTANGLE "Scheduled Data Fetcher (SDF)" as SDF <<microservice>> {
  note bottom of SDF
    - Periodically queries Airline API Integrator
    - Prefetches and caches flight data
    - Reduces load during peak times
  end note
}

RECTANGLE "Cache" as CACHE <<microservice>> {
  note right of CACHE
    - Stores frequently accessed flight data
    - Reduces load on Database and API
  end note
}

UI -down-> FSS : "1. Search Flights"
FSS -down-> CACHE : "2. Query Cache for Flights"
CACHE -right-> DB : "If not in Cache, query Database"
FSS -down-> AAI : "3. Fetch Flight Info if needed"
AAI -down-> "Airline APIs" : "Fetch Real-time Data"
AAI -left-> DB : "4. Store Flight Data"
DB -left-> CACHE : "Update Cache with latest data"
FSS -up-> UI : "5. Return Available Flights"

UI -down-> BS : "6. Select Flight and Book"
BS -up-> FSS : "7. Verify Flight Availability"
BS -down-> DB : "8. Store Booking Data"

BS -down-> PS : "9. Process Payment"
PS -left-> DB : "10. Store Payment Data"
PS -up-> BS : "11. Payment Confirmation"

BS -down-> NS : "12. Send Booking Confirmation"
NS -up-> UI : "13. Notify User"

SDF -right-> AAI : "Periodically Fetch Flight Data"
SDF -down-> DB : "Cache Flight Data"

@enduml
