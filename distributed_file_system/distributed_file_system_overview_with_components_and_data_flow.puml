@startuml dfs-overview
!pragma layout dot
allowmixing
skinparam backgroundColor #D0D0D0
skinparam defaultFontName Arial
skinparam defaultFontSize 14
skinparam roundCorner 15
skinparam Padding 30
skinparam ParticipantPadding 40
skinparam BoxPadding 40
skinparam shadowing false
skinparam ArrowThickness 1.5
skinparam NoteBackgroundColor #FFFAB1
skinparam NoteBorderColor #7F7F00
skinparam linetype ortho
skinparam ArrowColor #2C3E50

rectangle "Client Applications" as Client #87CEEB
rectangle "Load Balancer Cluster" as LB #FFA500 {
    component "Load Balancer 1" as LB1
    component "Load Balancer 2" as LB2
}
rectangle "Caching Layer" as CacheLayer #4169E1 {
    component "Redis Cluster" as Redis
    component "Memcached" as Memcached
}
rectangle "Name Node Cluster" as NameNodeCluster #32CD32 {
    component "Primary Name Node" as PNN
    component "Secondary Name Node" as SNN
}
rectangle "Data Node Cluster 1" as DataNodeCluster1 #FF6347 {
    component "Data Node 1.1" as DN11
    component "Data Node 1.2" as DN12
}
rectangle "Data Node Cluster 2" as DataNodeCluster2 #FF6347 {
    component "Data Node 2.1" as DN21
    component "Data Node 2.2" as DN22
}
rectangle "Admin Node" as AdminNode #DDA0DD {
    component "Monitoring System" as Monitor
    component "Configuration Manager" as Config
}

Client -[#0000FF,thickness=2]-> LB : <color:#0000FF>1. Client Request</color>
LB .[#006400,thickness=2]..> CacheLayer : <color:#006400>2a. Read Cache</color>
LB -[#006400,thickness=2]right-> NameNodeCluster : <color:#006400>2b. Write/Read Metadata</color>
CacheLayer .[#B8860B,thickness=2].> NameNodeCluster : <color:#B8860B>3. Cache Miss</color>
NameNodeCluster -[#8B0000,thickness=2]down-> DataNodeCluster1 : <color:#8B0000>4a. Data Operations</color>
NameNodeCluster -[#8B0000,thickness=2]down-> DataNodeCluster2 : <color:#8B0000>4b. Data Operations</color>
DataNodeCluster1 .[#4B0082,thickness=2].> CacheLayer : <color:#4B0082>5a. Update Cache</color>
DataNodeCluster2 .[#4B0082,thickness=2].> CacheLayer : <color:#4B0082>5b. Update Cache</color>
AdminNode -[#FF4500,thickness=2]up-> NameNodeCluster : <color:#FF4500>6a. Manage & Monitor</color>
AdminNode -[#FF4500,thickness=2]up-> LB : <color:#FF4500>6b. Manage & Monitor</color>
DataNodeCluster1 <-[#006400,thickness=2]right-> DataNodeCluster2 : <color:#006400>7. Replicate Data</color>

note bottom of Client #FFFACD
    <color:#000000>Unified API for read/write operations
    Supports multiple client protocols (e.g., REST, gRPC)</color>
end note

note bottom of LB
    Distributes requests and ensures high availability
    Implements health checks and automatic failover
end note

note right of CacheLayer
    Improves read performance
    Cache: key: file_id, value: file_content
end note

note right of NameNodeCluster
    Manages metadata and ensures data consistency
    Implements leader election for high availability
end note

note bottom of DataNodeCluster1
    Stores file data with built-in replication
    Implements data integrity checks
end note

note left of AdminNode
    System health monitoring and configuration management
    Provides centralized logging and alerting
end note

note bottom of DataNodeCluster1
    Performance bottleneck: I/O operations
    Optimization: SSD caching, data compression
end note

@enduml
