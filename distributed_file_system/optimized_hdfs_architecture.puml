@startuml Updated HDFS Architecture with YARN
!define RECTANGLE rectangle
skinparam backgroundColor #FAFAFA
skinparam defaultFontName Arial
skinparam defaultFontSize 14
skinparam roundCorner 15
skinparam ArrowThickness 1.2
skinparam Padding 10
skinparam PackageStyle rectangle
skinparam PackageBorderColor #A9A9A9

actor "Client" as Client

package "Front-End Layer" {
    RECTANGLE "Load Balancer" as LB
    RECTANGLE "Cache" as Cache
}

package "Management Layer" {
    RECTANGLE "NameNode" as NameNode
    RECTANGLE "YARN\nResource Manager" as YARN
    RECTANGLE "Admin Node" as AdminNode
}

package "Storage Layer" {
    RECTANGLE "DataNode Cluster" as DataNode
    RECTANGLE "Read Replica Cluster" as ReadReplica
}

Client -[#FF6347]down-> LB : 1. Request
LB -[#4682B4]right-> Cache : 2. Check Cache
LB -[#4682B4]down-> NameNode : 3. Get Metadata
NameNode -[#32CD32]down-> DataNode : 4. Manage Data
Client -[#FF6347]-> DataNode : 5. Read/Write Data
AdminNode -[#CD5C5C]-> NameNode : 6. Monitor & Manage
Client -[#FF6347]-> YARN : 7. Submit Job
YARN -[#8A2BE2]down-> DataNode : 8. Allocate Resources
YARN -[#8A2BE2]-> NameNode : 9. Coordinate

note right of YARN
  Resource Management:
  • Allocate cluster resources
  • Schedule jobs/tasks
  • Manage application lifecycle
  • Load balancing
end note

note right of Client : Submit jobs & data operations
note bottom of NameNode : Manage file system metadata
note bottom of DataNode : Store & process data

@enduml
