@startuml Optimized HDFS Architecture V19
!define RECTANGLE class

skinparam backgroundColor #E0E0E0
skinparam handwritten false
skinparam monochrome false
skinparam defaultFontName Arial
skinparam defaultFontSize 12
skinparam roundCorner 10
skinparam ArrowThickness 1.5
skinparam linetype ortho
skinparam ArrowFontSize 11
skinparam ArrowFontStyle italic
skinparam NoteBackgroundColor #FFFAF0
skinparam NoteBorderColor #D2B48C
skinparam RectangleBackgroundColor #F5F5F5
skinparam RectangleBorderColor #000000

RECTANGLE "Client" as Client
RECTANGLE "Load Balancer\nCluster" as LB
RECTANGLE "Caching Layer" as Cache
RECTANGLE "NameNode\nCluster" as NameNode
RECTANGLE "DataNode\nCluster" as DataNode
RECTANGLE "Secondary\nNameNode" as SecondaryNN
RECTANGLE "Admin Node" as AdminNode
RECTANGLE "YARN Resource\nManager" as YARN
RECTANGLE "Read Replica\nCluster" as ReadReplica

' 使用相同颜色设置连线和文字，将两行文字合并为一行
Client -[#FF6347]down-> LB : <color:#FF6347>1. Client Request</color>
LB -[#4682B4]right-> Cache : <color:#4682B4>2a. Read: Check Cache</color>
LB -[#4682B4]down-> NameNode : <color:#4682B4>2b. Write: Get Metadata</color>
Cache -[#9370DB]down-> NameNode : <color:#9370DB>3. Cache Operations</color>
NameNode -[#32CD32]right-> DataNode : <color:#32CD32>4a. Manage Data (Write)</color>
NameNode -[#32CD32]left-> ReadReplica : <color:#32CD32>4b. Manage Data (Read)</color>
Client -[#FF6347]right-> DataNode : <color:#FF6347>5a. Write Data</color>
Client -[#FF6347]left-> ReadReplica : <color:#FF6347>5b. Read Data</color>
AdminNode -[#CD5C5C]-> NameNode : <color:#CD5C5C>6a. Manage & Monitor</color>
AdminNode -[#CD5C5C]-> LB : <color:#CD5C5C>6b. Manage & Monitor</color>
AdminNode -[#CD5C5C]down-> DataNode : <color:#CD5C5C>6c. Manage & Monitor</color>
AdminNode -[#CD5C5C]down-> ReadReplica : <color:#CD5C5C>6d. Manage & Monitor</color>
NameNode <-[#4169E1]left- SecondaryNN : <color:#4169E1>7. Periodic Sync</color>
NameNode <-[#8A2BE2]-> YARN : <color:#8A2BE2>8. Resource Coordination</color>
Client -[#FF6347]-> YARN : <color:#FF6347>9. Submit Jobs</color>
YARN -[#8A2BE2]-> DataNode : <color:#8A2BE2>10a. Allocate Write Resources</color>
YARN -[#8A2BE2]-> ReadReplica : <color:#8A2BE2>10b. Allocate Read Resources</color>
Cache <-[#9370DB]-> DataNode : <color:#9370DB>11a. Cache Write Updates</color>
Cache <-[#9370DB]-> ReadReplica : <color:#9370DB>11b. Cache Read Updates</color>
DataNode -[#FFA500]-> ReadReplica : <color:#FFA500>12. Data Replication</color>

note right of Client
  + Read/Write files
  + Interact with NameNode, DataNodes, and Read Replicas
  + Handle file chunking
  + Implement HDFS client protocol
end note

note right of LB
  + Health Check
  + Request Router (Read/Write Separation)
  + SSL Termination
  + Rate Limiting
end note

note left of Cache
  Redis Cluster:
  + Key: file_path:chunk_id
  + Key: metadata:file_path
  + Distributed caching
  + Eviction policies
  + Separate Read/Write Caches
end note

note right of NameNode
  + File System Namespace
  + Block Management
  + Replication Management
  + DataNode & Read Replica Heartbeat Monitoring
  + Access Control and Permissions
  + Read/Write Split Management
  --
  Metadata Storage (ZooKeeper):
  + File system tree
  + Block mappings
  + Node status
end note

note left of DataNode
  + Store and manage data blocks (Primary)
  + Handle write requests
  + Perform block replication
  + Send heartbeats and block reports
  + Handle data integrity checks
  --
  Storage:
  + Primary Storage
  + Write-optimized
end note

note right of ReadReplica
  + Store replicated data blocks
  + Serve read requests
  + Receive updates from DataNodes
  + Send heartbeats and block reports
  + Optimize for read performance
  --
  Storage:
  + Read-optimized replicas
end note

note bottom of SecondaryNN
  + Periodic checkpoints of FSImage
  + Merge EditLog into FSImage
  + Reduce NameNode startup time
  + Assist in read operations
end note

note top of AdminNode
  + System Monitoring and Alerts
  + Configuration Management
  + Failure Detection and Recovery
  + Performance Tuning
  + Security Management
  + Manage Read/Write Distribution
end note

note left of YARN
  + Resource Allocation (Read/Write)
  + Job Scheduling
  + Cluster Resource Management
end note

note as N1
  Performance & Scalability:
  + Data Locality
  + Rack Awareness
  + Small Files Optimization
  + HDFS Federation
  + Erasure Coding
  + Read/Write Separation
  + Data Redundancy
end note

NameNode .. N1
DataNode .. N1
ReadReplica .. N1

@enduml
