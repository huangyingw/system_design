@startuml Optimized Cross-Datacenter Distributed File System Architecture
!define RECTANGLE rectangle
!define DATABASE database
!define CLOUD cloud

skinparam backgroundColor #F0F0F0
skinparam handwritten false
skinparam monochrome false
skinparam defaultFontName Arial
skinparam defaultFontSize 20
skinparam roundCorner 10
skinparam ArrowColor #2C3E50
skinparam ArrowThickness 1.5
skinparam linetype ortho

allowmixing

' Global Components
CLOUD "Global Load Balancer" as GLB #D6EAF8 {
    component "Geo-aware Routing" as GeoRouting
    component "Request Distribution" as ReqDist
}

RECTANGLE "Global Metadata Management" as GMM #AED6F1 {
    component "Cross-DC Metadata Sync" as MetaSync
    component "Global Namespace" as GlobalNS
}

RECTANGLE "Global Admin & Monitoring" as GAM #D5F5E3 {
    component "Cross-DC Monitoring" as CrossDCMon
    component "Disaster Recovery" as DR
    component "Configuration Management" as ConfigMgmt
}

' Data Center 1
RECTANGLE "Data Center 1" as DC1 #FDEBD0 {
    ' Client
    rectangle "Client" as Client1 #A9CCE3

    ' Load Balancer Cluster
    RECTANGLE "Load Balancer Cluster" as LB1 #F5B041 {
        component "Health Check" as HealthCheck1
        component "Request Router" as RequestRouter1
    }

    ' Caching Layer
    RECTANGLE "Caching Layer" as CacheLayer1 #85C1E9 {
        DATABASE "Redis Cluster" as RedisCache1 {
            note right
                Cache Structure:
                1. File chunk location:
                   Key: "chunk:{file_path}:{chunk_id}"
                   Value: Node ID storing the chunk
                2. File metadata:
                   Key: "metadata:{file_path}"
                   Value: Serialized file metadata
            end note
        }
    }

    ' Name Node Cluster
    RECTANGLE "Name Node Cluster" as NameNodeCluster1 #82E0AA {
        DATABASE "Metadata Storage\n(ZooKeeper)" as MetadataStorage1 {
            note right: "Data:\n- File system tree\n- Block mappings\n- Node status"
        }
        component "File System Manager" as FSManager1
        component "Block Manager" as BlockManager1
        component "Replication Manager" as ReplicationManager1
        component "Data Node Manager" as DataNodeManager1
    }

    ' Data Node Clusters
    RECTANGLE "Data Node Cluster" as DataNodeCluster1 #F1948A {
        DATABASE "Primary Storage" as PrimaryStorage1 {
            note right: "Sharding Key: file_id % 2 == 0"
        }
        DATABASE "Replica Storage" as ReplicaStorage1 {
            note right: "Replica of DC2"
        }
    }

    ' Read Coordinator
    component "Read Coordinator" as ReadCoord1 #FFA07A
}

' Data Center 2 (more detailed now)
RECTANGLE "Data Center 2" as DC2 #FDEBD0 {
    rectangle "Client" as Client2 #A9CCE3
    RECTANGLE "Load Balancer Cluster" as LB2 #F5B041
    RECTANGLE "Caching Layer" as CacheLayer2 #85C1E9
    RECTANGLE "Name Node Cluster" as NameNodeCluster2 #82E0AA {
        DATABASE "Metadata Storage\n(ZooKeeper)" as MetadataStorage2
    }
    RECTANGLE "Data Node Cluster" as DataNodeCluster2 #F1948A {
        DATABASE "Primary Storage" as PrimaryStorage2 {
            note left: "Sharding Key: file_id % 2 == 1"
        }
        DATABASE "Replica Storage" as ReplicaStorage2 {
            note left: "Replica of DC1"
        }
    }
    component "Read Coordinator" as ReadCoord2 #FFA07A
}

' Connections
Client1 --> GLB : "1. Client Request"
Client2 --> GLB : "1. Client Request"
GLB --> LB1 : "2. Route to nearest DC"
GLB --> LB2 : "2. Route to nearest DC"
LB1 --> ReadCoord1 : "3a. Read Request"
LB1 --> NameNodeCluster1 : "3b. Write Request"
ReadCoord1 --> CacheLayer1 : "4a. Check Cache"
ReadCoord1 --> NameNodeCluster1 : "4b. Get Metadata"
NameNodeCluster1 --> PrimaryStorage1 : "5a. Write Data"
ReadCoord1 --> ReplicaStorage1 : "5b. Read Data"
CacheLayer1 --> NameNodeCluster1 : "6. Cache Miss"
PrimaryStorage1 --> ReplicaStorage2 : "7. Replicate Data"
NameNodeCluster1 <--> GMM : "8a. Sync Metadata"
NameNodeCluster2 <--> GMM : "8b. Sync Metadata"
NameNodeCluster1 <--> NameNodeCluster2 : "9. Cross-DC Metadata Sync"
DataNodeCluster1 <--> DataNodeCluster2 : "10. Cross-DC Data Replication"
GAM --> DC1 : "11. Monitor & Manage"
GAM --> DC2 : "11. Monitor & Manage"

' Additional notes for explanation
note top of GLB
  Global Load Balancer provides 
  geo-aware routing and ensures 
  even distribution of requests 
  across data centers
end note

note bottom of GMM
  Global Metadata Management 
  ensures consistency of metadata 
  across data centers and manages 
  the global namespace
end note

note bottom of GAM
  Global Admin & Monitoring oversees 
  system health across all data centers, 
  manages configuration, and handles 
  disaster recovery
end note

note right of DataNodeCluster1
  Read-Write Separation:
  - Write requests go to Primary Storage
  - Read requests are served by Replica Storage
  - Cross-DC replication ensures data consistency
end note

@enduml
