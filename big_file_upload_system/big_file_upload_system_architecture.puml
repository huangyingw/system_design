@startuml
skinparam backgroundColor white
skinparam handwritten false
skinparam shadowing false
skinparam linetype ortho
skinparam padding 10
skinparam roundCorner 10

' Color definitions
!define CLIENT_COLOR #E0E0E0
!define SERVICE_COLOR #D0E0F0
!define STORAGE_COLOR #F0E0D0
!define QUEUE_COLOR #E0F0D0
!define CACHE_COLOR #F0D0E0

skinparam component {
    BackgroundColor<<CLIENT>> CLIENT_COLOR
    BackgroundColor<<SERVICE>> SERVICE_COLOR
    BackgroundColor<<STORAGE>> STORAGE_COLOR
    BackgroundColor<<QUEUE>> QUEUE_COLOR
    BackgroundColor<<CACHE>> CACHE_COLOR
    BorderColor #808080
    FontColor black
}

package "Client Side" {
    [Client] <<CLIENT>>
    [FileChunker] <<CLIENT>>
    [ResumableUploadManager] <<CLIENT>>
    [ResumableDownloadManager] <<CLIENT>>
}

package "Service Layer" {
    [LoadBalancer] <<SERVICE>>
    note right of [LoadBalancer]
        Implements rate limiting
    end note
    
    [UploadService] <<SERVICE>>
    [DownloadService] <<SERVICE>>
    [CDN] <<SERVICE>>
}

package "Storage Layer" {
    database "ObjectStorage" <<STORAGE>> {
        [FileChunks]
        [Metadata]
    }
    note bottom of ObjectStorage
        Implements data sharding,
        replication, and database functions
    end note
}

queue "MessageQueue" <<QUEUE>>
[CacheService] <<CACHE>>

' Connections
Client --> FileChunker : Split large file
FileChunker --> LoadBalancer : Upload/Download file chunks
LoadBalancer --> MessageQueue : Enqueue file chunks
MessageQueue --> UploadService : Dequeue and process upload chunks
MessageQueue --> DownloadService : Dequeue and process download requests
UploadService --> ObjectStorage : Store file chunks and metadata
DownloadService <-- ObjectStorage : Retrieve file chunks and metadata
Client --> ResumableUploadManager : Manage file upload chunks
Client --> ResumableDownloadManager : Manage file download chunks
ResumableUploadManager --> UploadService : Manage upload status
ResumableDownloadManager --> DownloadService : Manage download status
UploadService <--> CacheService : Cache/Retrieve frequently accessed data
DownloadService <--> CacheService : Cache/Retrieve frequently accessed data
DownloadService --> CDN : Serve popular files

@enduml
