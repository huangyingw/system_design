@startuml Twitter Comment System Design

!define FONTNAME Roboto
!define FONTSIZE 12
!define TITLEFONTSIZE 18

skinparam backgroundColor #E0E8F0
skinparam defaultFontName FONTNAME
skinparam defaultFontSize FONTSIZE
skinparam roundcorner 10
skinparam shadowing false
skinparam ArrowColor #2C3E50
skinparam ArrowThickness 1.2
skinparam rectangleBorderColor #34495E
skinparam rectangleBackgroundColor #ECF0F1
skinparam databaseBorderColor #16A085
skinparam databaseBackgroundColor #D1F2EB
skinparam queueBorderColor #8E44AD
skinparam queueBackgroundColor #E8DAEF
skinparam noteBorderColor #F39C12
skinparam noteBackgroundColor #FCF3CF

title <font size=TITLEFONTSIZE>Twitter Comment System: Comment Flow</font>

actor User

rectangle "User Interface" as UI {
    [Web & Mobile Apps]
}

cloud "CDN" as CDN

rectangle "API Gateway" as APIGateway {
    [Load Balancer]
    [Auth & Rate Limiting]
}

rectangle "Comment Service" as CommentService {
    [Comment CRUD]
    [Tree Structure]
    [Sorting & Pagination]
}

database "Data Storage" as DataStorage {
    [Comment DB]
}

rectangle "Cache Layer" as CacheLayer {
    [Redis Cluster]
}

queue "Message Queue" as MessageQueue {
    [Kafka]
}

rectangle "ML & Analytics" as MLAnalytics {
    [Sentiment Analysis]
    [Content Moderation]
}

rectangle "Notification Service" as NotificationService

User -[#3498DB]right-> UI : "1. Post comment"
UI -[#3498DB]down-> CDN : "2. Send request"
CDN -[#3498DB]down-> APIGateway : "3. Route request"
APIGateway -[#3498DB]down-> CommentService : "4. Process comment"
CommentService -[#3498DB]right-> CacheLayer : "5. Check cache"
CommentService -[#3498DB]down-> DataStorage : "6. Store comment"
CommentService -[#3498DB]left-> MessageQueue : "7. Publish event"
MessageQueue -[#3498DB]-> MLAnalytics : "8. Analyze content"
MLAnalytics -[#3498DB]-> CommentService : "9. Return analysis"
MessageQueue -[#3498DB]-> NotificationService : "10. Send notifications"
CommentService -[#3498DB]up-> APIGateway : "11. Return response"
APIGateway -[#3498DB]up-> CDN : "12. Send response"
CDN -[#3498DB]up-> UI : "13. Update UI"
UI -[#3498DB]left-> User : "14. Display comment"

note right of UI
  Features:
  - Real-time updates
  - Infinite scrolling
  - Rich text editor
end note

note right of APIGateway
  - Rate limiting: 100 req/min
  - JWT Authentication
end note

note right of CommentService
  - Tree structure for replies
  - Sorting: Latest, Most liked
  - Pagination: 20 comments/page
end note

note bottom of DataStorage
  - Sharding by tweet_id
  - Multi-region replication
end note

note bottom of CacheLayer
  key: tweet_id
  value: {
    comments: [...],
    user_info: {...}
  }
  TTL: 1 hour
end note

note bottom of MLAnalytics
  Performance bottleneck:
  High volume of comments
  
  Optimization:
  - Batch processing
  - Asynchronous analysis
end note

@enduml